// <auto-generated />
using System;
using Kestra.Models.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kestra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210722014724_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kestra.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            Name = "BUY"
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            Name = "SELL"
                        });
                });

            modelBuilder.Entity("Kestra.Models.Ticker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tickers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deleted = false,
                            Name = "AAPL"
                        },
                        new
                        {
                            Id = 2,
                            Deleted = false,
                            Name = "GOOG"
                        },
                        new
                        {
                            Id = 3,
                            Deleted = false,
                            Name = "CRM"
                        },
                        new
                        {
                            Id = 4,
                            Deleted = false,
                            Name = "AMZN"
                        },
                        new
                        {
                            Id = 5,
                            Deleted = false,
                            Name = "SNOW"
                        },
                        new
                        {
                            Id = 6,
                            Deleted = false,
                            Name = "NFLX"
                        },
                        new
                        {
                            Id = 7,
                            Deleted = false,
                            Name = "BABA"
                        },
                        new
                        {
                            Id = 8,
                            Deleted = false,
                            Name = "FRT"
                        },
                        new
                        {
                            Id = 9,
                            Deleted = false,
                            Name = "TSLA"
                        },
                        new
                        {
                            Id = 10,
                            Deleted = false,
                            Name = "SQ"
                        });
                });

            modelBuilder.Entity("Kestra.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TickerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("TickerId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOnUtc = new DateTime(2021, 7, 22, 1, 47, 23, 234, DateTimeKind.Utc).AddTicks(4820),
                            Deleted = false,
                            OrderId = 1,
                            Quantity = 100m,
                            TickerId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedOnUtc = new DateTime(2021, 7, 22, 1, 47, 23, 234, DateTimeKind.Utc).AddTicks(4820),
                            Deleted = false,
                            OrderId = 1,
                            Quantity = 50m,
                            TickerId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedOnUtc = new DateTime(2021, 7, 22, 1, 47, 23, 234, DateTimeKind.Utc).AddTicks(4820),
                            Deleted = false,
                            OrderId = 1,
                            Quantity = 50m,
                            TickerId = 6
                        },
                        new
                        {
                            Id = 4,
                            CreatedOnUtc = new DateTime(2021, 7, 22, 1, 47, 23, 234, DateTimeKind.Utc).AddTicks(4820),
                            Deleted = false,
                            OrderId = 2,
                            Quantity = 10m,
                            TickerId = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedOnUtc = new DateTime(2021, 7, 22, 1, 47, 23, 234, DateTimeKind.Utc).AddTicks(4820),
                            Deleted = false,
                            OrderId = 1,
                            Quantity = 1000m,
                            TickerId = 9
                        });
                });

            modelBuilder.Entity("Kestra.Models.Transaction", b =>
                {
                    b.HasOne("Kestra.Models.Order", "Order")
                        .WithMany("Transactions")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kestra.Models.Ticker", "Ticker")
                        .WithMany("Transactions")
                        .HasForeignKey("TickerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Ticker");
                });

            modelBuilder.Entity("Kestra.Models.Order", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Kestra.Models.Ticker", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
